===== ./.dart_tool/dartpad/web_plugin_registrant.dart =====
// Flutter web plugin registrant file.
//
// Generated file. Do not edit.
//

// ignore_for_file: type=lint

void registerPlugins() {}
-e 

===== ./lib/models/message.dart =====
class Message {
  final String id;
  final String senderId;
  final String receiverId;
  final String content;
  final DateTime timestamp;
  final bool isRead;

  Message({
    required this.id,
    required this.senderId,
    required this.receiverId,
    required this.content,
    required this.timestamp,
    this.isRead = false,
  });
}
-e 

===== ./lib/models/audit_log.dart =====
class AuditLog {
  final String id;
  final String userId;
  final String action;
  final DateTime timestamp;
  final String details;

  AuditLog({
    required this.id,
    required this.userId,
    required this.action,
    required this.timestamp,
    required this.details,
  });
}
-e 

===== ./lib/models/client.dart =====
class Client {
  final String id;
  final String name;
  final String address;
  final String carePlan;

  Client({
    required this.id,
    required this.name,
    required this.address,
    required this.carePlan,
  });
}
-e 

===== ./lib/models/medication_record.dart =====
class MedicationRecord {
  final String id;
  final String clientId;
  final String medicationName;
  final String dosage;
  final DateTime administrationTime;
  final String notes;

  MedicationRecord({
    required this.id,
    required this.clientId,
    required this.medicationName,
    required this.dosage,
    required this.administrationTime,
    required this.notes,
  });
}
-e 

===== ./lib/models/task.dart =====
class Task {
  final String id;
  final String clientId;
  final String title;
  final String description;
  final bool isCompleted;
  final DateTime dueDate;

  Task({
    required this.id,
    required this.clientId,
    required this.title,
    required this.description,
    this.isCompleted = false,
    required this.dueDate,
  });
}
-e 

===== ./lib/models/user.dart =====
class User {
  final String id;
  final String role; // e.g., 'admin', 'caregiver', 'family'

  User({required this.id, required this.role});
}
-e 

===== ./lib/models/care_note.dart =====
class CareNote {
  final String id;
  final String clientId;
  final String caregiverId;
  final String note;
  final DateTime timestamp;

  CareNote({
    required this.id,
    required this.clientId,
    required this.caregiverId,
    required this.note,
    required this.timestamp,
  });
}
-e 

===== ./lib/constants.dart =====
class Routes {
  static const String login = '/login';
  static const String userProfile = '/user_profile';
  static const String adminDashboard = '/admin_dashboard';
  static const String clientList = '/client_list';
  static const String clientProfile = '/client_profile';
  static const String shiftAssignment = '/shift_assignment';
  static const String billingDashboard = '/billing_dashboard';
  static const String invoiceGeneration = '/invoice_generation';
  static const String payrollProcessing = '/payroll_processing';
  static const String reportsDashboard = '/reports_dashboard';
  static const String auditLog = '/audit_log';
  static const String caregiverDashboard = '/caregiver_dashboard';
  static const String scheduleOverview = '/schedule_overview';
  static const String visitCheckIn = '/visit_check_in';
  static const String taskList = '/task_list';
  static const String emar = '/emar';
  static const String careNotes = '/care_notes';
  static const String visitCheckOut = '/visit_check_out';
  static const String familyPortal = '/family_portal';
  static const String messages = '/messages';
  static const String paymentStatus = '/payment_status';
  static const String offlineMode = '/offline_mode';
  static const String syncStatus = '/sync_status';
}
-e 

===== ./lib/user_provider.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/models/user.dart';

class UserProvider with ChangeNotifier {
  User? _user;

  User? get user => _user;

  void setUser(User user) {
    _user = user;
    notifyListeners();
  }

  String getInitialRoute() {
    switch (_user?.role) {
      case 'admin':
        return '/admin_dashboard';
      case 'caregiver':
        return '/caregiver_dashboard';
      case 'family':
        return '/family_portal';
      default:
        return '/login';
    }
  }
}
-e 

===== ./lib/main.dart =====
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/screens/login_screen.dart';
import 'package:homecare0x1/screens/user_profile_screen.dart';
import 'package:homecare0x1/screens/admin_dashboard.dart';
import 'package:homecare0x1/screens/client_list_screen.dart';
import 'package:homecare0x1/screens/client_profile_screen.dart';
import 'package:homecare0x1/screens/shift_assignment_screen.dart';
import 'package:homecare0x1/screens/billing_dashboard.dart';
import 'package:homecare0x1/screens/invoice_generation_screen.dart';
import 'package:homecare0x1/screens/payroll_processing_screen.dart';
import 'package:homecare0x1/screens/reports_dashboard.dart';
import 'package:homecare0x1/screens/audit_log_screen.dart';
import 'package:homecare0x1/screens/caregiver_dashboard.dart';
import 'package:homecare0x1/screens/schedule_overview_screen.dart';
import 'package:homecare0x1/screens/visit_check_in_screen.dart';
import 'package:homecare0x1/screens/task_list_screen.dart';
import 'package:homecare0x1/screens/emar_screen.dart';
import 'package:homecare0x1/screens/care_notes_screen.dart';
import 'package:homecare0x1/screens/visit_check_out_screen.dart';
import 'package:homecare0x1/screens/family_portal_screen.dart';
import 'package:homecare0x1/screens/messages_screen.dart';
import 'package:homecare0x1/screens/payment_status_screen.dart';
import 'package:homecare0x1/screens/offline_mode_screen.dart';
import 'package:homecare0x1/screens/sync_status_screen.dart';
import 'package:homecare0x1/user_provider.dart';

void main() {
  runApp(
    ChangeNotifierProvider(
      create: (context) => UserProvider(),
      child: const MyApp(),
    ),
  );
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Homecare Management',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.blue),
        useMaterial3: true,
      ),
      initialRoute: Routes.login,
      routes: {
        Routes.login: (context) => const LoginScreen(),
        Routes.userProfile: (context) => const UserProfileScreen(),
        Routes.adminDashboard: (context) => const AdminDashboardScreen(),
        Routes.clientList: (context) => ClientListScreen(),
        Routes.clientProfile: (context) => const ClientProfileScreen(),
        Routes.shiftAssignment: (context) => const ShiftAssignmentScreen(),
        Routes.billingDashboard: (context) => const BillingDashboardScreen(),
        Routes.invoiceGeneration: (context) => const InvoiceGenerationScreen(),
        Routes.payrollProcessing: (context) => const PayrollProcessingScreen(),
        Routes.reportsDashboard: (context) => const ReportsDashboardScreen(),
        Routes.auditLog: (context) => AuditLogScreen(),
        Routes.caregiverDashboard: (context) =>
            const CaregiverDashboardScreen(),
        Routes.scheduleOverview: (context) => const ScheduleOverviewScreen(),
        Routes.visitCheckIn: (context) => const VisitCheckInScreen(),
        Routes.taskList: (context) => const TaskListScreen(),
        Routes.emar: (context) => const EmarScreen(),
        Routes.careNotes: (context) => const CareNotesScreen(),
        Routes.visitCheckOut: (context) => const VisitCheckOutScreen(),
        Routes.familyPortal: (context) => const FamilyPortalScreen(),
        Routes.messages: (context) => const MessagesScreen(),
        Routes.paymentStatus: (context) => const PaymentStatusScreen(),
        Routes.offlineMode: (context) => const OfflineModeScreen(),
        Routes.syncStatus: (context) => const SyncStatusScreen(),
      },
      onGenerateRoute: (settings) {
        return MaterialPageRoute(
          builder: (context) => const Scaffold(
            body: Center(child: Text('Page Not Found')),
          ),
        );
      },
    );
  }
}
-e 

===== ./lib/theme/app_theme.dart =====
import 'package:flutter/material.dart';

class AppTheme {
  static const Color primaryBlue = Color(0xFF1E88E5);
  static const Color primaryBlueLight = Color(0xFF6AB7F5);
  static const Color secondaryTeal = Color(0xFF26A69A);
  static const Color secondaryTealLight = Color(0xFF80CBC4);
  static const Color accentOrange = Color(0xFFF57C00);
  static const Color warningYellow = Color(0xFFFFCA28);
  static const Color successGreen = Color(0xFF4CAF50);
  static const Color errorRed = Color(0xFFE53935);
  static const Color neutral600 = Color(0xFF757575);
  static const Color neutral100 = Color(0xFFF5F5F5);

  static ThemeData get theme {
    return ThemeData(
      useMaterial3: true,
      colorScheme: ColorScheme.fromSeed(
        seedColor: primaryBlue,
        primary: primaryBlue,
        secondary: secondaryTeal,
      ),
      scaffoldBackgroundColor: neutral100,
      textTheme: const TextTheme(
        headlineMedium: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
        titleLarge: TextStyle(fontSize: 20, fontWeight: FontWeight.w500),
        bodyLarge: TextStyle(fontSize: 16),
        bodyMedium: TextStyle(fontSize: 14),
      ),
      cardTheme: CardTheme(
        elevation: 2,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      ),
    );
  }
}
-e 

===== ./lib/widgets/common/modern_button.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/theme/app_theme.dart';

class ModernButton extends StatelessWidget {
  final String text;
  final IconData? icon;
  final VoidCallback? onPressed;
  final double? width;
  final bool isOutlined;
  final bool isLoading;

  const ModernButton({
    super.key,
    required this.text,
    this.icon,
    this.onPressed,
    this.width,
    this.isOutlined = false,
    this.isLoading = false,
  });

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: width ?? double.infinity,
      height: 48,
      child: isOutlined
          ? OutlinedButton.icon(
              onPressed: isLoading ? null : onPressed,
              icon: icon != null && !isLoading ? Icon(icon) : const SizedBox(),
              label: isLoading
                  ? const CircularProgressIndicator()
                  : Text(text),
              style: OutlinedButton.styleFrom(
                side: const BorderSide(color: AppTheme.primaryBlue),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
            )
          : ElevatedButton.icon(
              onPressed: isLoading ? null : onPressed,
              icon: icon != null && !isLoading ? Icon(icon) : const SizedBox(),
              label: isLoading
                  ? const CircularProgressIndicator()
                  : Text(text),
              style: ElevatedButton.styleFrom(
                backgroundColor: AppTheme.primaryBlue,
                foregroundColor: Colors.white,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
              ),
            ),
    );
  }
}
-e 

===== ./lib/widgets/common/modern_screen_layout.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/theme/app_theme.dart';

class ModernScreenLayout extends StatelessWidget {
  final String title;
  final Widget body;
  final bool showBackButton;
  final List<Widget>? actions;
  final Widget? floatingActionButton;

  const ModernScreenLayout({
    super.key,
    required this.title,
    required this.body,
    this.showBackButton = true,
    this.actions,
    this.floatingActionButton,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(title),
        leading: showBackButton
            ? IconButton(
                icon: const Icon(Icons.arrow_back),
                onPressed: () => Navigator.pop(context),
              )
            : null,
        actions: actions,
        backgroundColor: AppTheme.neutral100,
        elevation: 0,
      ),
      body: body,
      floatingActionButton: floatingActionButton,
      backgroundColor: AppTheme.neutral100,
    );
  }
}
-e 

===== ./lib/widgets/cards/dashboard_card.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/theme/app_theme.dart';

class DashboardCard extends StatelessWidget {
  final String title;
  final String subtitle;
  final IconData icon;
  final Color iconColor;
  final VoidCallback? onTap;
  final String? badge;

  const DashboardCard({
    super.key,
    required this.title,
    required this.subtitle,
    required this.icon,
    required this.iconColor,
    this.onTap,
    this.badge,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      child: InkWell(
        onTap: onTap,
        borderRadius: BorderRadius.circular(12),
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                children: [
                  Icon(icon, color: iconColor, size: 32),
                  if (badge != null) ...[
                    const Spacer(),
                    Container(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 8, vertical: 4),
                      decoration: BoxDecoration(
                        color: AppTheme.errorRed,
                        borderRadius: BorderRadius.circular(12),
                      ),
                      child: Text(
                        badge!,
                        style: const TextStyle(
                          color: Colors.white,
                          fontSize: 12,
                          fontWeight: FontWeight.bold,
                        ),
                      ),
                    ),
                  ],
                ],
              ),
              const SizedBox(height: 12),
              Text(
                title,
                style: Theme.of(context).textTheme.titleLarge,
              ),
              const SizedBox(height: 4),
              Text(
                subtitle,
                style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                      color: AppTheme.neutral600,
                    ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/widgets/cards/stats_card.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/theme/app_theme.dart';

class StatsCard extends StatelessWidget {
  final String title;
  final String value;
  final String change;
  final bool isPositive;
  final IconData icon;
  final Color color;

  const StatsCard({
    super.key,
    required this.title,
    required this.value,
    required this.change,
    required this.isPositive,
    required this.icon,
    required this.color,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      child: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Container(
                  padding: const EdgeInsets.all(8),
                  decoration: BoxDecoration(
                    color: color.withOpacity(0.1),
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Icon(icon, color: color, size: 24),
                ),
                const Spacer(),
                Text(
                  change,
                  style: TextStyle(
                    color: isPositive ? AppTheme.successGreen : AppTheme.errorRed,
                    fontSize: 14,
                    fontWeight: FontWeight.w500,
                  ),
                ),
              ],
            ),
            const SizedBox(height: 12),
            Text(
              value,
              style: const TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            const SizedBox(height: 4),
            Text(
              title,
              style: Theme.of(context).textTheme.bodyMedium?.copyWith(
                    color: AppTheme.neutral600,
                  ),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/reports_dashboard.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class ReportsDashboardScreen extends StatelessWidget {
  const ReportsDashboardScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Reports Dashboard',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Reports Dashboard',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'View analytics and reports on services, revenue, and performance.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'View Audit Logs',
              icon: Icons.history,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.auditLog),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/visit_check_in_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class VisitCheckInScreen extends StatelessWidget {
  const VisitCheckInScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Check-In',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Visit Check-In',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Check in to a client visit, recording start time and location.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'View Tasks',
              icon: Icons.task,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.taskList),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Log Medication',
              icon: Icons.medical_services,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.emar),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Add Care Notes',
              icon: Icons.note,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.careNotes),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Check Out',
              icon: Icons.check_outlined,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.visitCheckOut),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/login_screen.dart =====
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:homecare0x1/models/user.dart';
import 'package:homecare0x1/user_provider.dart';
import 'package:homecare0x1/services/auth_service.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});

  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  final _formKey = GlobalKey<FormState>();
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  bool _isLoading = false;
  String? _errorMessage;

  @override
  void dispose() {
    emailController.dispose();
    passwordController.dispose();
    super.dispose();
  }

  Future<void> _login(BuildContext context) async {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _isLoading = true;
        _errorMessage = null;
      });
      final authService = AuthService();
      final user = await authService.login(
        emailController.text.trim(),
        passwordController.text,
      );
      setState(() => _isLoading = false);
      if (user != null) {
        final userProvider = Provider.of<UserProvider>(context, listen: false);
        userProvider.setUser(user);
        Navigator.pushReplacementNamed(context, userProvider.getInitialRoute());
      } else {
        setState(() {
          _errorMessage = 'Invalid email or password';
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Login',
      showBackButton: false,
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text(
                'Welcome to Homecare Management',
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
              ),
              const SizedBox(height: 10),
              const Text(
                'Sign in with your credentials to access your role-specific dashboard.',
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 20),
              TextFormField(
                controller: emailController,
                decoration: const InputDecoration(
                  labelText: 'Email',
                  border: OutlineInputBorder(),
                ),
                keyboardType: TextInputType.emailAddress,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your email';
                  }
                  if (!RegExp(r'^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$')
                      .hasMatch(value)) {
                    return 'Please enter a valid email';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: passwordController,
                decoration: const InputDecoration(
                  labelText: 'Password',
                  border: OutlineInputBorder(),
                ),
                obscureText: true,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter your password';
                  }
                  if (value.length < 6) {
                    return 'Password must be at least 6 characters';
                  }
                  return null;
                },
              ),
              if (_errorMessage != null) ...[
                const SizedBox(height: 10),
                Text(
                  _errorMessage!,
                  style: TextStyle(color: Theme.of(context).colorScheme.error),
                ),
              ],
              const SizedBox(height: 20),
              ModernButton(
                text: 'Login',
                icon: Icons.login,
                width: double.infinity,
                isLoading: _isLoading,
                onPressed: () => _login(context),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/audit_log_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/audit_log.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:intl/intl.dart';

class AuditLogScreen extends StatelessWidget {
  AuditLogScreen({super.key});

  // Mock audit logs
  final List<AuditLog> _logs = [
    AuditLog(
      id: '1',
      userId: 'admin1',
      action: 'Client Profile Updated',
      timestamp: DateTime.now().subtract(const Duration(hours: 1)),
      details: 'Updated care plan for John Doe',
    ),
    AuditLog(
      id: '2',
      userId: 'caregiver1',
      action: 'Medication Logged',
      timestamp: DateTime.now().subtract(const Duration(hours: 2)),
      details: 'Logged Aspirin for John Doe',
    ),
    AuditLog(
      id: '3',
      userId: 'admin1',
      action: 'Shift Assigned',
      timestamp: DateTime.now().subtract(const Duration(days: 1)),
      details: 'Assigned caregiver to Jane Smith',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Audit Log',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Audit Log',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'View system actions for compliance',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            Expanded(
              child: _logs.isEmpty
                  ? const Center(child: Text('No logs found'))
                  : ListView.builder(
                      itemCount: _logs.length,
                      itemBuilder: (context, index) {
                        final log = _logs[index];
                        return Card(
                          margin: const EdgeInsets.symmetric(vertical: 8),
                          child: ListTile(
                            title: Text(log.action),
                            subtitle: Text(
                              'By: ${log.userId}\nTime: ${DateFormat('MMM d, h:mm a').format(log.timestamp)}\nDetails: ${log.details}',
                            ),
                            leading: Icon(
                              Icons.history,
                              color: AppTheme.neutral600,
                            ),
                          ),
                        );
                      },
                    ),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Reports',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/billing_dashboard.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:homecare0x1/widgets/cards/stats_card.dart';

class BillingDashboardScreen extends StatelessWidget {
  const BillingDashboardScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Billing Dashboard',
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Billing Overview',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'Monitor and manage financial operations',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            LayoutBuilder(
              builder: (context, constraints) {
                if (constraints.maxWidth > 600) {
                  return Row(
                    children: [
                      Expanded(
                        child: StatsCard(
                          title: 'Total Revenue',
                          value: '\$12,450',
                          change: '+8%',
                          isPositive: true,
                          icon: Icons.monetization_on,
                          color: AppTheme.successGreen,
                        ),
                      ),
                      const SizedBox(width: 16),
                      Expanded(
                        child: StatsCard(
                          title: 'Pending Payments',
                          value: '\$1,230',
                          change: '-5%',
                          isPositive: false,
                          icon: Icons.payment,
                          color: AppTheme.errorRed,
                        ),
                      ),
                    ],
                  );
                }
                return Column(
                  children: [
                    StatsCard(
                      title: 'Total Revenue',
                      value: '\$12,450',
                      change: '+8%',
                      isPositive: true,
                      icon: Icons.monetization_on,
                      color: AppTheme.successGreen,
                    ),
                    const SizedBox(height: 16),
                    StatsCard(
                      title: 'Pending Payments',
                      value: '\$1,230',
                      change: '-5%',
                      isPositive: false,
                      icon: Icons.payment,
                      color: AppTheme.errorRed,
                    ),
                  ],
                );
              },
            ),
            const SizedBox(height: 24),
            ModernButton(
              text: 'Generate Invoice',
              icon: Icons.receipt_long,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.invoiceGeneration),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Process Payroll',
              icon: Icons.account_balance_wallet,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.payrollProcessing),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/payment_status_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class PaymentStatusScreen extends StatelessWidget {
  const PaymentStatusScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Payment Status',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Payment Status',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'View payment history and outstanding balances.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Family Portal',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/task_list_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/task.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:intl/intl.dart';

class TaskListScreen extends StatefulWidget {
  const TaskListScreen({super.key});

  @override
  _TaskListScreenState createState() => _TaskListScreenState();
}

class _TaskListScreenState extends State<TaskListScreen> {
  // Mock task data
  List<Task> _tasks = [
    Task(
      id: '1',
      clientId: '1',
      title: 'Morning Medication',
      description: 'Administer prescribed medication',
      dueDate: DateTime.now().add(const Duration(hours: 1)),
    ),
    Task(
      id: '2',
      clientId: '1',
      title: 'Mobility Assistance',
      description: 'Help with morning walk',
      dueDate: DateTime.now().add(const Duration(hours: 2)),
    ),
    Task(
      id: '3',
      clientId: '1',
      title: 'Meal Preparation',
      description: 'Prepare breakfast',
      isCompleted: true,
      dueDate: DateTime.now().subtract(const Duration(hours: 1)),
    ),
  ];

  void _toggleTaskCompletion(int index) {
    setState(() {
      _tasks[index] = Task(
        id: _tasks[index].id,
        clientId: _tasks[index].clientId,
        title: _tasks[index].title,
        description: _tasks[index].description,
        isCompleted: !_tasks[index].isCompleted,
        dueDate: _tasks[index].dueDate,
      );
    });
  }

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Task List',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Visit Tasks',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'Manage tasks for the current client visit',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            Expanded(
              child: ListView.builder(
                itemCount: _tasks.length,
                itemBuilder: (context, index) {
                  final task = _tasks[index];
                  return Card(
                    margin: const EdgeInsets.symmetric(vertical: 8),
                    child: ListTile(
                      leading: Checkbox(
                        value: task.isCompleted,
                        onChanged: (value) => _toggleTaskCompletion(index),
                        activeColor: AppTheme.successGreen,
                      ),
                      title: Text(
                        task.title,
                        style: TextStyle(
                          decoration: task.isCompleted
                              ? TextDecoration.lineThrough
                              : null,
                        ),
                      ),
                      subtitle: Text(
                        '${task.description}\nDue: ${DateFormat('MMM d, h:mm a').format(task.dueDate)}',
                      ),
                      trailing: Icon(
                        Icons.task,
                        color: AppTheme.primaryBlue,
                      ),
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Check-In',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: AppTheme.primaryBlue,
        child: const Icon(Icons.add),
        onPressed: () {
          // TODO: Implement add task functionality
        },
      ),
    );
  }
}
-e 

===== ./lib/screens/schedule_overview_screen.dart =====
import 'package:flutter/material.dart';
// import 'package:homecare0x1/constants.dart';
import 'package:provider/provider.dart';
import 'package:homecare0x1/user_provider.dart';
// import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class ScheduleOverviewScreen extends StatelessWidget {
  const ScheduleOverviewScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context);
    return ModernScreenLayout(
      title: 'Schedule Overview',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Schedule Overview',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'View your upcoming shifts or care schedule.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, userProvider.getInitialRoute()),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/admin_dashboard.dart =====
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/cards/dashboard_card.dart';

class AdminDashboardScreen extends StatelessWidget {
  const AdminDashboardScreen({super.key});

  Widget _buildCircularStat({
    required String title,
    required String value,
    required double percent,
    required Color color,
    required IconData icon,
  }) {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.08),
        borderRadius: BorderRadius.circular(20),
        border: Border.all(color: Colors.white.withOpacity(0.1)),
      ),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Stack(
            alignment: Alignment.center,
            children: [
              SizedBox(
                height: 80,
                width: 80,
                child: CircularProgressIndicator(
                  value: percent,
                  backgroundColor: Colors.white10,
                  strokeWidth: 6,
                  valueColor: AlwaysStoppedAnimation(color),
                ),
              ),
              Icon(icon, color: Colors.white, size: 28),
            ],
          ),
          const SizedBox(height: 12),
          Text(value,
              style: const TextStyle(
                  fontSize: 22,
                  fontWeight: FontWeight.bold,
                  color: Colors.white)),
          const SizedBox(height: 4),
          Text(title, style: const TextStyle(color: Colors.white70)),
        ],
      ),
    );
  }

  List<Widget> _buildDashboardActions(BuildContext context) {
    return [
      DashboardCard(
        title: 'Clients',
        subtitle: 'Profiles',
        icon: Icons.people_outline,
        iconColor: AppTheme.primaryBlue,
        onTap: () => Navigator.pushNamed(context, Routes.clientList),
      ),
      DashboardCard(
        title: 'Shifts',
        subtitle: 'Assign caregivers',
        icon: Icons.schedule,
        iconColor: AppTheme.secondaryTeal,
        onTap: () => Navigator.pushNamed(context, Routes.shiftAssignment),
      ),
      DashboardCard(
        title: 'Billing',
        subtitle: 'Payments & tracking',
        icon: Icons.payment,
        iconColor: AppTheme.accentOrange,
        onTap: () => Navigator.pushNamed(context, Routes.billingDashboard),
      ),
      DashboardCard(
        title: 'Reports',
        subtitle: 'Insights',
        icon: Icons.analytics_outlined,
        iconColor: AppTheme.successGreen,
        onTap: () => Navigator.pushNamed(context, Routes.reportsDashboard),
      ),
      DashboardCard(
        title: 'Audit Logs',
        subtitle: 'User activity',
        icon: Icons.history,
        iconColor: AppTheme.neutral600,
        badge: '3',
        onTap: () => Navigator.pushNamed(context, Routes.auditLog),
      ),
      DashboardCard(
        title: 'Invoices',
        subtitle: 'Manage',
        icon: Icons.receipt_long,
        iconColor: AppTheme.warningYellow,
        onTap: () => Navigator.pushNamed(context, Routes.invoiceGeneration),
      ),
    ];
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        bool? shouldExit = await showDialog<bool>(
          context: context,
          builder: (context) => AlertDialog(
            title: const Text('Exit App'),
            content: const Text('Exit the dashboard?'),
            actions: [
              TextButton(
                  onPressed: () => Navigator.pop(context, false),
                  child: const Text('Cancel')),
              TextButton(
                  onPressed: () => Navigator.pop(context, true),
                  child: const Text('Exit')),
            ],
          ),
        );
        if (shouldExit ?? false) SystemNavigator.pop();
        return false;
      },
      child: ModernScreenLayout(
        title: '',
        showBackButton: false,
        actions: [
          IconButton(
              icon: const Icon(Icons.notifications_outlined), onPressed: () {}),
          IconButton(
              icon: const Icon(Icons.person_outline),
              onPressed: () =>
                  Navigator.pushNamed(context, Routes.userProfile)),
        ],
        body: RefreshIndicator(
          onRefresh: () async =>
              await Future.delayed(const Duration(seconds: 1)),
          child: SingleChildScrollView(
            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 30),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Welcome Banner
                Container(
                  width: double.infinity,
                  padding: const EdgeInsets.all(28),
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      colors: [
                        AppTheme.primaryBlue.withOpacity(0.7),
                        AppTheme.primaryBlueLight.withOpacity(0.4)
                      ],
                      begin: Alignment.topLeft,
                      end: Alignment.bottomRight,
                    ),
                    borderRadius: BorderRadius.circular(24),
                  ),
                  child: const Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text("Welcome Back, Admin!",
                          style: TextStyle(
                              color: Colors.white,
                              fontSize: 26,
                              fontWeight: FontWeight.bold)),
                      SizedBox(height: 8),
                      Text("Here's your overview for today.",
                          style:
                              TextStyle(color: Colors.white70, fontSize: 16)),
                    ],
                  ),
                ),
                const SizedBox(height: 30),

                // KPI Indicators
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Expanded(
                      child: _buildCircularStat(
                        title: 'Active Clients',
                        value: '24',
                        percent: 0.75,
                        color: AppTheme.primaryBlue,
                        icon: Icons.people,
                      ),
                    ),
                    const SizedBox(width: 16),
                    Expanded(
                      child: _buildCircularStat(
                        title: 'Caregivers',
                        value: '15',
                        percent: 0.6,
                        color: AppTheme.secondaryTeal,
                        icon: Icons.medical_services,
                      ),
                    ),
                    const SizedBox(width: 16),
                    Expanded(
                      child: _buildCircularStat(
                        title: 'Invoices',
                        value: '8',
                        percent: 0.3,
                        color: AppTheme.accentOrange,
                        icon: Icons.receipt,
                      ),
                    ),
                  ],
                ),
                const SizedBox(height: 30),

                // Quick Actions
                GridView.count(
                  shrinkWrap: true,
                  physics: const NeverScrollableScrollPhysics(),
                  crossAxisCount:
                      MediaQuery.of(context).size.width > 600 ? 3 : 2,
                  crossAxisSpacing: 20,
                  mainAxisSpacing: 20,
                  childAspectRatio: 1.1,
                  children: _buildDashboardActions(context),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/invoice_generation_screen.dart =====
import 'package:flutter/material.dart';
// import 'package:homecare0x1/constants.dart';
// import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class InvoiceGenerationScreen extends StatelessWidget {
  const InvoiceGenerationScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Invoice Generation',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Invoice Generation',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Create and send invoices to clients for services rendered.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Billing',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/sync_status_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class SyncStatusScreen extends StatelessWidget {
  const SyncStatusScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Sync Status',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Sync Status',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'View the status of data synchronization with the server.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Offline Mode',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/client_profile_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/client.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class ClientProfileScreen extends StatefulWidget {
  const ClientProfileScreen({super.key});

  @override
  _ClientProfileScreenState createState() => _ClientProfileScreenState();
}

class _ClientProfileScreenState extends State<ClientProfileScreen> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _nameController;
  late TextEditingController _addressController;
  late TextEditingController _carePlanController;
  bool _isEditing = false;

  // Mock client data
  Client _client = Client(
    id: '1',
    name: 'John Doe',
    address: '123 Main St',
    carePlan: 'Daily care, mobility assistance',
  );

  @override
  void initState() {
    super.initState();
    _nameController = TextEditingController(text: _client.name);
    _addressController = TextEditingController(text: _client.address);
    _carePlanController = TextEditingController(text: _client.carePlan);
  }

  @override
  void dispose() {
    _nameController.dispose();
    _addressController.dispose();
    _carePlanController.dispose();
    super.dispose();
  }

  void _toggleEdit() {
    setState(() {
      _isEditing = !_isEditing;
      if (!_isEditing) {
        // Save changes (mock save)
        _client = Client(
          id: _client.id,
          name: _nameController.text,
          address: _addressController.text,
          carePlan: _carePlanController.text,
        );
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Client Profile',
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Client Details',
                style: Theme.of(context).textTheme.headlineMedium,
              ),
              const SizedBox(height: 8),
              Text(
                'View and edit client information',
                style: Theme.of(context).textTheme.bodyLarge,
              ),
              const SizedBox(height: 24),
              TextFormField(
                controller: _nameController,
                enabled: _isEditing,
                decoration: const InputDecoration(
                  labelText: 'Name',
                  border: OutlineInputBorder(),
                ),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter a name' : null,
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _addressController,
                enabled: _isEditing,
                decoration: const InputDecoration(
                  labelText: 'Address',
                  border: OutlineInputBorder(),
                ),
                validator: (value) =>
                    value!.isEmpty ? 'Please enter an address' : null,
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _carePlanController,
                enabled: _isEditing,
                decoration: const InputDecoration(
                  labelText: 'Care Plan',
                  border: OutlineInputBorder(),
                ),
                maxLines: 3,
                validator: (value) =>
                    value!.isEmpty ? 'Please enter a care plan' : null,
              ),
              const SizedBox(height: 24),
              ModernButton(
                text: _isEditing ? 'Save Changes' : 'Edit Profile',
                icon: _isEditing ? Icons.save : Icons.edit,
                width: double.infinity,
                onPressed: () {
                  if (_isEditing && _formKey.currentState!.validate()) {
                    _toggleEdit();
                  } else if (!_isEditing) {
                    _toggleEdit();
                  }
                },
              ),
              const SizedBox(height: 16),
              ModernButton(
                text: 'Back to Client List',
                icon: Icons.arrow_back,
                isOutlined: true,
                width: double.infinity,
                onPressed: () => Navigator.pop(context),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/visit_check_out_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class VisitCheckOutScreen extends StatelessWidget {
  const VisitCheckOutScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Check-Out',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Visit Check-Out',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Check out of a client visit, recording end time and summary.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.caregiverDashboard),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/caregiver_dashboard.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/cards/dashboard_card.dart';
import 'package:homecare0x1/widgets/cards/stats_card.dart';

class CaregiverDashboardScreen extends StatelessWidget {
  const CaregiverDashboardScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Caregiver Dashboard',
      showBackButton: false,
      actions: [
        IconButton(
          icon: const Icon(Icons.notifications_outlined),
          onPressed: () {},
        ),
        IconButton(
          icon: const Icon(Icons.person_outline),
          onPressed: () => Navigator.pushNamed(context, Routes.userProfile),
        ),
      ],
      body: RefreshIndicator(
        onRefresh: () async {
          await Future.delayed(const Duration(seconds: 1));
        },
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [AppTheme.secondaryTeal, AppTheme.secondaryTealLight],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(16),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      'Welcome back, Caregiver',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 24,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    const SizedBox(height: 8),
                    const Text(
                      'Manage your daily care tasks efficiently',
                      style: TextStyle(
                        color: Colors.white70,
                        fontSize: 16,
                      ),
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 24),
              Text(
                'Today\'s Overview',
                style: Theme.of(context).textTheme.titleLarge,
              ),
              const SizedBox(height: 16),
              LayoutBuilder(
                builder: (context, constraints) {
                  if (constraints.maxWidth > 600) {
                    return Row(
                      children: [
                        Expanded(
                          child: StatsCard(
                            title: 'Upcoming Visits',
                            value: '3',
                            change: '+1',
                            isPositive: true,
                            icon: Icons.schedule,
                            color: AppTheme.secondaryTeal,
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: StatsCard(
                            title: 'Completed Tasks',
                            value: '12',
                            change: '+4',
                            isPositive: true,
                            icon: Icons.check_circle,
                            color: AppTheme.successGreen,
                          ),
                        ),
                      ],
                    );
                  }
                  return Column(
                    children: [
                      StatsCard(
                        title: 'Upcoming Visits',
                        value: '3',
                        change: '+1',
                        isPositive: true,
                        icon: Icons.schedule,
                        color: AppTheme.secondaryTeal,
                      ),
                      const SizedBox(height: 16),
                      StatsCard(
                        title: 'Completed Tasks',
                        value: '12',
                        change: '+4',
                        isPositive: true,
                        icon: Icons.check_circle,
                        color: AppTheme.successGreen,
                      ),
                    ],
                  );
                },
              ),
              const SizedBox(height: 24),
              Text(
                'Quick Actions',
                style: Theme.of(context).textTheme.titleLarge,
              ),
              const SizedBox(height: 16),
              GridView.count(
                shrinkWrap: true,
                physics: const NeverScrollableScrollPhysics(),
                crossAxisCount: MediaQuery.of(context).size.width > 600 ? 3 : 2,
                crossAxisSpacing: 16,
                mainAxisSpacing: 16,
                childAspectRatio: 1.2,
                children: [
                  DashboardCard(
                    title: 'View Schedule',
                    subtitle: 'Check your upcoming visits',
                    icon: Icons.calendar_today,
                    iconColor: AppTheme.secondaryTeal,
                    onTap: () => Navigator.pushNamed(context, Routes.scheduleOverview),
                  ),
                  DashboardCard(
                    title: 'Check In',
                    subtitle: 'Start a client visit',
                    icon: Icons.login,
                    iconColor: AppTheme.primaryBlue,
                    onTap: () => Navigator.pushNamed(context, Routes.visitCheckIn),
                  ),
                  DashboardCard(
                    title: 'Messages',
                    subtitle: 'Communicate with clients',
                    icon: Icons.message,
                    iconColor: AppTheme.accentOrange,
                    badge: '2',
                    onTap: () => Navigator.pushNamed(context, Routes.messages),
                  ),
                  DashboardCard(
                    title: 'My Profile',
                    subtitle: 'Manage your account',
                    icon: Icons.person,
                    iconColor: AppTheme.neutral600,
                    onTap: () => Navigator.pushNamed(context, Routes.userProfile),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/client_list_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/client.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class ClientListScreen extends StatelessWidget {
  ClientListScreen({super.key});

  // Mock client data
  final List<Client> _clients = [
    Client(
        id: '1',
        name: 'John Doe',
        address: '123 Main St',
        carePlan: 'Daily care'),
    Client(
        id: '2',
        name: 'Jane Smith',
        address: '456 Oak Ave',
        carePlan: 'Weekly check-in'),
    Client(
        id: '3',
        name: 'Alice Johnson',
        address: '789 Pine Rd',
        carePlan: 'Hourly assistance'),
  ];

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Client List',
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Clients',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'View and manage all client profiles',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            Expanded(
              child: ListView.builder(
                itemCount: _clients.length,
                itemBuilder: (context, index) {
                  final client = _clients[index];
                  return Card(
                    margin: const EdgeInsets.symmetric(vertical: 8),
                    child: ListTile(
                      title: Text(client.name),
                      subtitle: Text(client.address),
                      trailing: Icon(Icons.arrow_forward,
                          color: AppTheme.primaryBlue),
                      onTap: () =>
                          Navigator.pushNamed(context, Routes.clientProfile),
                    ),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: AppTheme.primaryBlue,
        child: const Icon(Icons.add),
        onPressed: () {
          // TODO: Implement add client functionality
        },
      ),
    );
  }
}
-e 

===== ./lib/screens/messages_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/message.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/user_provider.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:intl/intl.dart';
import 'package:provider/provider.dart';

class MessagesScreen extends StatefulWidget {
  const MessagesScreen({super.key});

  @override
  _MessagesScreenState createState() => _MessagesScreenState();
}

class _MessagesScreenState extends State<MessagesScreen> {
  final _messageController = TextEditingController();
  final _formKey = GlobalKey<FormState>();

  // Mock messages
  List<Message> _messages = [
    Message(
      id: '1',
      senderId: 'caregiver1',
      receiverId: 'family1',
      content: 'Client is doing well today.',
      timestamp: DateTime.now().subtract(const Duration(hours: 1)),
      isRead: true,
    ),
    Message(
      id: '2',
      senderId: 'family1',
      receiverId: 'caregiver1',
      content: 'Thank you for the update!',
      timestamp: DateTime.now().subtract(const Duration(minutes: 30)),
      isRead: false,
    ),
  ];

  void _sendMessage(String senderId) {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _messages.add(
          Message(
            id: (_messages.length + 1).toString(),
            senderId: senderId,
            receiverId: senderId == 'caregiver1' ? 'family1' : 'caregiver1',
            content: _messageController.text,
            timestamp: DateTime.now(),
            isRead: false,
          ),
        );
        _messageController.clear();
      });
    }
  }

  @override
  void dispose() {
    _messageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context);
    final currentUserId = userProvider.user?.id ?? 'unknown';

    return ModernScreenLayout(
      title: 'Messages',
      body: Column(
        children: [
          Expanded(
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'Messages',
                    style: Theme.of(context).textTheme.headlineMedium,
                  ),
                  const SizedBox(height: 8),
                  Text(
                    'Communicate with caregivers or family',
                    style: Theme.of(context).textTheme.bodyLarge,
                  ),
                  const SizedBox(height: 24),
                  Expanded(
                    child: _messages.isEmpty
                        ? const Center(child: Text('No messages found'))
                        : ListView.builder(
                            reverse: true,
                            itemCount: _messages.length,
                            itemBuilder: (context, index) {
                              final message =
                                  _messages[_messages.length - 1 - index];
                              final isSentByCurrentUser =
                                  message.senderId == currentUserId;
                              return Align(
                                alignment: isSentByCurrentUser
                                    ? Alignment.centerRight
                                    : Alignment.centerLeft,
                                child: Container(
                                  margin: const EdgeInsets.symmetric(vertical: 4),
                                  padding: const EdgeInsets.all(12),
                                  decoration: BoxDecoration(
                                    color: isSentByCurrentUser
                                        ? AppTheme.primaryBlue
                                        : AppTheme.neutral100,
                                    borderRadius: BorderRadius.circular(12),
                                  ),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      Text(
                                        message.content,
                                        style: TextStyle(
                                          color: isSentByCurrentUser
                                              ? Colors.white
                                              : Colors.black,
                                        ),
                                      ),
                                      const SizedBox(height: 4),
                                      Text(
                                        DateFormat('h:mm a')
                                            .format(message.timestamp),
                                        style: TextStyle(
                                          color: isSentByCurrentUser
                                              ? Colors.white70
                                              : AppTheme.neutral600,
                                          fontSize: 12,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              );
                            },
                          ),
                  ),
                ],
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Form(
              key: _formKey,
              child: Row(
                children: [
                  Expanded(
                    child: TextFormField(
                      controller: _messageController,
                      decoration: const InputDecoration(
                        labelText: 'Type a message',
                        border: OutlineInputBorder(),
                      ),
                      validator: (value) =>
                          value!.isEmpty ? 'Please enter a message' : null,
                    ),
                  ),
                  const SizedBox(width: 8),
                  ModernButton(
                    text: 'Send',
                    icon: Icons.send,
                    onPressed: () => _sendMessage(currentUserId),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
-e 

===== ./lib/screens/shift_assignment_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class ShiftAssignmentScreen extends StatelessWidget {
  const ShiftAssignmentScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Shift Assignment',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Shift Assignment',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Assign caregivers to client shifts based on availability.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/emar_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/medication_record.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:intl/intl.dart';

class EmarScreen extends StatefulWidget {
  const EmarScreen({super.key});

  @override
  _EmarScreenState createState() => _EmarScreenState();
}

class _EmarScreenState extends State<EmarScreen> {
  final _formKey = GlobalKey<FormState>();
  final _medicationController = TextEditingController();
  final _dosageController = TextEditingController();
  final _notesController = TextEditingController();
  bool _isAdding = false;

  // Mock medication records
  List<MedicationRecord> _records = [
    MedicationRecord(
      id: '1',
      clientId: '1',
      medicationName: 'Aspirin',
      dosage: '100mg',
      administrationTime: DateTime.now().subtract(const Duration(hours: 2)),
      notes: 'Taken with water',
    ),
    MedicationRecord(
      id: '2',
      clientId: '1',
      medicationName: 'Lisinopril',
      dosage: '10mg',
      administrationTime: DateTime.now().subtract(const Duration(hours: 4)),
      notes: 'No side effects',
    ),
  ];

  void _toggleAddForm() {
    setState(() {
      _isAdding = !_isAdding;
      if (!_isAdding) {
        _medicationController.clear();
        _dosageController.clear();
        _notesController.clear();
      }
    });
  }

  void _addRecord() {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _records.insert(
          0,
          MedicationRecord(
            id: (_records.length + 1).toString(),
            clientId: '1',
            medicationName: _medicationController.text,
            dosage: _dosageController.text,
            administrationTime: DateTime.now(),
            notes: _notesController.text,
          ),
        );
        _toggleAddForm();
      });
    }
  }

  @override
  void dispose() {
    _medicationController.dispose();
    _dosageController.dispose();
    _notesController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'eMAR',
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Medication Administration',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'Log and view medication records',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            ModernButton(
              text: _isAdding ? 'Cancel' : 'Add Medication',
              icon: _isAdding ? Icons.cancel : Icons.add,
              width: double.infinity,
              isOutlined: _isAdding,
              onPressed: _toggleAddForm,
            ),
            if (_isAdding) ...[
              const SizedBox(height: 16),
              Form(
                key: _formKey,
                child: Column(
                  children: [
                    TextFormField(
                      controller: _medicationController,
                      decoration: const InputDecoration(
                        labelText: 'Medication Name',
                        border: OutlineInputBorder(),
                      ),
                      validator: (value) =>
                          value!.isEmpty ? 'Please enter medication name' : null,
                    ),
                    const SizedBox(height: 16),
                    TextFormField(
                      controller: _dosageController,
                      decoration: const InputDecoration(
                        labelText: 'Dosage',
                        border: OutlineInputBorder(),
                      ),
                      validator: (value) =>
                          value!.isEmpty ? 'Please enter dosage' : null,
                    ),
                    const SizedBox(height: 16),
                    TextFormField(
                      controller: _notesController,
                      decoration: const InputDecoration(
                        labelText: 'Notes',
                        border: OutlineInputBorder(),
                      ),
                      maxLines: 3,
                    ),
                    const SizedBox(height: 16),
                    ModernButton(
                      text: 'Log Medication',
                      icon: Icons.save,
                      width: double.infinity,
                      onPressed: _addRecord,
                    ),
                  ],
                ),
              ),
            ],
            const SizedBox(height: 24),
            Text(
              'Medication History',
              style: Theme.of(context).textTheme.titleLarge,
            ),
            const SizedBox(height: 16),
            _records.isEmpty
                ? const Center(child: Text('No records found'))
                : ListView.builder(
                    shrinkWrap: true,
                    physics: const NeverScrollableScrollPhysics(),
                    itemCount: _records.length,
                    itemBuilder: (context, index) {
                      final record = _records[index];
                      return Card(
                        margin: const EdgeInsets.symmetric(vertical: 8),
                        child: ListTile(
                          title: Text(record.medicationName),
                          subtitle: Text(
                            'Dosage: ${record.dosage}\nTime: ${DateFormat('MMM d, h:mm a').format(record.administrationTime)}\nNotes: ${record.notes}',
                          ),
                          leading: Icon(
                            Icons.medical_services,
                            color: AppTheme.primaryBlue,
                          ),
                        ),
                      );
                    },
                  ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Check-In',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/offline_mode_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class OfflineModeScreen extends StatelessWidget {
  const OfflineModeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Offline Mode',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Offline Mode',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Access cached data and limited functionality while offline.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Check Sync Status',
              icon: Icons.sync,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, Routes.syncStatus),
            ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/payroll_processing_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class PayrollProcessingScreen extends StatelessWidget {
  const PayrollProcessingScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Payroll Processing',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Payroll Processing',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'Calculate and process payroll for caregivers.',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Billing',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/family_portal_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/cards/dashboard_card.dart';
import 'package:homecare0x1/widgets/cards/stats_card.dart';

class FamilyPortalScreen extends StatelessWidget {
  const FamilyPortalScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Family Portal',
      showBackButton: false,
      actions: [
        IconButton(
          icon: const Icon(Icons.notifications_outlined),
          onPressed: () {},
        ),
        IconButton(
          icon: const Icon(Icons.person_outline),
          onPressed: () => Navigator.pushNamed(context, Routes.userProfile),
        ),
      ],
      body: RefreshIndicator(
        onRefresh: () async {
          await Future.delayed(const Duration(seconds: 1));
        },
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [AppTheme.accentOrange, AppTheme.warningYellow],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(16),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      'Welcome, Family Member',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 24,
                        fontWeight: FontWeight.w600,
                      ),
                    ),
                    const SizedBox(height: 8),
                    const Text(
                      'Stay connected with your loved one\'s care',
                      style: TextStyle(
                        color: Colors.white70,
                        fontSize: 16,
                      ),
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 24),
              Text(
                'Care Overview',
                style: Theme.of(context).textTheme.titleLarge,
              ),
              const SizedBox(height: 16),
              LayoutBuilder(
                builder: (context, constraints) {
                  if (constraints.maxWidth > 600) {
                    return Row(
                      children: [
                        Expanded(
                          child: StatsCard(
                            title: 'Upcoming Visits',
                            value: '4',
                            change: '+2',
                            isPositive: true,
                            icon: Icons.schedule,
                            color: AppTheme.secondaryTeal,
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: StatsCard(
                            title: 'Care Notes',
                            value: '7',
                            change: '+3',
                            isPositive: true,
                            icon: Icons.note,
                            color: AppTheme.primaryBlue,
                          ),
                        ),
                      ],
                    );
                  }
                  return Column(
                    children: [
                      StatsCard(
                        title: 'Upcoming Visits',
                        value: '4',
                        change: '+2',
                        isPositive: true,
                        icon: Icons.schedule,
                        color: AppTheme.secondaryTeal,
                      ),
                      const SizedBox(height: 16),
                      StatsCard(
                        title: 'Care Notes',
                        value: '7',
                        change: '+3',
                        isPositive: true,
                        icon: Icons.note,
                        color: AppTheme.primaryBlue,
                      ),
                    ],
                  );
                },
              ),
              const SizedBox(height: 24),
              Text(
                'Quick Actions',
                style: Theme.of(context).textTheme.titleLarge,
              ),
              const SizedBox(height: 16),
              GridView.count(
                shrinkWrap: true,
                physics: const NeverScrollableScrollPhysics(),
                crossAxisCount: MediaQuery.of(context).size.width > 600 ? 3 : 2,
                crossAxisSpacing: 16,
                mainAxisSpacing: 16,
                childAspectRatio: 1.2,
                children: [
                  DashboardCard(
                    title: 'Care Schedule',
                    subtitle: 'View upcoming visits',
                    icon: Icons.calendar_today,
                    iconColor: AppTheme.secondaryTeal,
                    onTap: () => Navigator.pushNamed(context, Routes.scheduleOverview),
                  ),
                  DashboardCard(
                    title: 'Messages',
                    subtitle: 'Contact caregivers',
                    icon: Icons.message,
                    iconColor: AppTheme.accentOrange,
                    badge: '2',
                    onTap: () => Navigator.pushNamed(context, Routes.messages),
                  ),
                  DashboardCard(
                    title: 'Payments',
                    subtitle: 'Check payment status',
                    icon: Icons.payment,
                    iconColor: AppTheme.primaryBlue,
                    onTap: () => Navigator.pushNamed(context, Routes.paymentStatus),
                  ),
                  DashboardCard(
                    title: 'My Profile',
                    subtitle: 'Manage account details',
                    icon: Icons.person,
                    iconColor: AppTheme.neutral600,
                    onTap: () => Navigator.pushNamed(context, Routes.userProfile),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/user_profile_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:provider/provider.dart';
import 'package:homecare0x1/user_provider.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';

class UserProfileScreen extends StatelessWidget {
  const UserProfileScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context);
    return ModernScreenLayout(
      title: 'User Profile',
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'User Profile',
              style: TextStyle(fontSize: 24, fontWeight: FontWeight.w600),
            ),
            const SizedBox(height: 10),
            const Text(
              'View and edit your profile details (e.g., name, email, contact info).',
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            ModernButton(
              text: 'Back to Dashboard',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pushNamed(context, userProvider.getInitialRoute()),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/screens/care_notes_screen.dart =====
import 'package:flutter/material.dart';
import 'package:homecare0x1/constants.dart';
import 'package:homecare0x1/models/care_note.dart';
import 'package:homecare0x1/theme/app_theme.dart';
import 'package:homecare0x1/widgets/common/modern_screen_layout.dart';
import 'package:homecare0x1/widgets/common/modern_button.dart';
import 'package:intl/intl.dart';

class CareNotesScreen extends StatefulWidget {
  const CareNotesScreen({super.key});

  @override
  _CareNotesScreenState createState() => _CareNotesScreenState();
}

class _CareNotesScreenState extends State<CareNotesScreen> {
  final _formKey = GlobalKey<FormState>();
  final _noteController = TextEditingController();
  bool _isAdding = false;

  // Mock care notes
  List<CareNote> _notes = [
    CareNote(
      id: '1',
      clientId: '1',
      caregiverId: 'caregiver1',
      note: 'Client was in good spirits, assisted with mobility.',
      timestamp: DateTime.now().subtract(const Duration(hours: 3)),
    ),
    CareNote(
      id: '2',
      clientId: '1',
      caregiverId: 'caregiver1',
      note: 'Noticed slight fatigue, recommended rest.',
      timestamp: DateTime.now().subtract(const Duration(days: 1)),
    ),
  ];

  void _toggleAddForm() {
    setState(() {
      _isAdding = !_isAdding;
      if (!_isAdding) {
        _noteController.clear();
      }
    });
  }

  void _addNote() {
    if (_formKey.currentState!.validate()) {
      setState(() {
        _notes.insert(
          0,
          CareNote(
            id: (_notes.length + 1).toString(),
            clientId: '1',
            caregiverId: 'caregiver1',
            note: _noteController.text,
            timestamp: DateTime.now(),
          ),
        );
        _toggleAddForm();
      });
    }
  }

  @override
  void dispose() {
    _noteController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return ModernScreenLayout(
      title: 'Care Notes',
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Care Notes',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
            const SizedBox(height: 8),
            Text(
              'Record and view notes about client care',
              style: Theme.of(context).textTheme.bodyLarge,
            ),
            const SizedBox(height: 24),
            ModernButton(
              text: _isAdding ? 'Cancel' : 'Add Note',
              icon: _isAdding ? Icons.cancel : Icons.add,
              width: double.infinity,
              isOutlined: _isAdding,
              onPressed: _toggleAddForm,
            ),
            if (_isAdding) ...[
              const SizedBox(height: 16),
              Form(
                key: _formKey,
                child: Column(
                  children: [
                    TextFormField(
                      controller: _noteController,
                      decoration: const InputDecoration(
                        labelText: 'Note',
                        border: OutlineInputBorder(),
                      ),
                      maxLines: 5,
                      validator: (value) =>
                          value!.isEmpty ? 'Please enter a note' : null,
                    ),
                    const SizedBox(height: 16),
                    ModernButton(
                      text: 'Save Note',
                      icon: Icons.save,
                      width: double.infinity,
                      onPressed: _addNote,
                    ),
                  ],
                ),
              ),
            ],
            const SizedBox(height: 24),
            Text(
              'Note History',
              style: Theme.of(context).textTheme.titleLarge,
            ),
            const SizedBox(height: 16),
            _notes.isEmpty
                ? const Center(child: Text('No notes found'))
                : ListView.builder(
                    shrinkWrap: true,
                    physics: const NeverScrollableScrollPhysics(),
                    itemCount: _notes.length,
                    itemBuilder: (context, index) {
                      final note = _notes[index];
                      return Card(
                        margin: const EdgeInsets.symmetric(vertical: 8),
                        child: ListTile(
                          title: Text(note.note),
                          subtitle: Text(
                            'Time: ${DateFormat('MMM d, h:mm a').format(note.timestamp)}',
                          ),
                          leading: Icon(Icons.note, color: AppTheme.primaryBlue),
                        ),
                      );
                    },
                  ),
            const SizedBox(height: 16),
            ModernButton(
              text: 'Back to Check-In',
              icon: Icons.arrow_back,
              isOutlined: true,
              width: double.infinity,
              onPressed: () => Navigator.pop(context),
            ),
          ],
        ),
      ),
    );
  }
}
-e 

===== ./lib/services/auth_service.dart =====
import 'package:homecare0x1/models/user.dart';

class AuthService {
  // Mock user database
  final Map<String, Map<String, String>> _mockUsers = {
    'admin@example.com': {'password': 'admin123', 'role': 'admin', 'id': 'admin1'},
    'caregiver@example.com': {'password': 'care123', 'role': 'caregiver', 'id': 'caregiver1'},
    'family@example.com': {'password': 'fam123', 'role': 'family', 'id': 'family1'},
  };

  Future<User?> login(String email, String password) async {
    await Future.delayed(const Duration(seconds: 1)); // Simulate network delay
    final userData = _mockUsers[email];
    if (userData != null && userData['password'] == password) {
      return User(id: userData['id']!, role: userData['role']!);
    }
    return null;
  }
}-e 

===== ./test/widget_test.dart =====
// This is a basic Flutter widget test.
//
// To perform an interaction with a widget in your test, use the WidgetTester
// utility in the flutter_test package. For example, you can send tap and scroll
// gestures. You can also use WidgetTester to find child widgets in the widget
// tree, read text, and verify that the values of widget properties are correct.

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

import 'package:homecare0x1/main.dart';

void main() {
  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(const MyApp());

    // Verify that our counter starts at 0.
    expect(find.text('0'), findsOneWidget);
    expect(find.text('1'), findsNothing);

    // Tap the '+' icon and trigger a frame.
    await tester.tap(find.byIcon(Icons.add));
    await tester.pump();

    // Verify that our counter has incremented.
    expect(find.text('0'), findsNothing);
    expect(find.text('1'), findsOneWidget);
  });
}
-e 

